# %%
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load data
data = pd.read_csv('student_scores.csv')

# Check for missing values
print(data.isnull().sum())

# Visualize
sns.scatterplot(x='Hours', y='Scores', data=data)
plt.title('Study Hours vs Exam Score')
plt.show()

# %%
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# Split data
X = data[['Hours']]
y = data['Scores']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# %%
from sklearn.metrics import mean_squared_error, r2_score

print(f'MSE: {mean_squared_error(y_test, y_pred):.2f}')
print(f'RÂ² Score: {r2_score(y_test, y_pred):.2f}')

# %%
plt.scatter(X_test, y_test, color='blue')
plt.plot(X_test, y_pred, color='red')
plt.title('Regression Line')
plt.xlabel('Hours Studied')
plt.ylabel('Exam Score')
plt.show()

# %%
print(f'Coefficient: {model.coef_[0]:.2f}')
print(f'Intercept: {model.intercept_:.2f}')

# %%
import statsmodels.api as sm 
model=sm.OLS(y_train,X_train).fit()

# %%
prediction=model.predict(X_test)
print(prediction)

# %%
print(model.summary())


